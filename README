HiLive - Live Mapping of Illumina reads

1. Description
--------------
HiLive is a read mapping tool that maps Illumina HiSeq (or comparable) 
reads right in the moment when they are produced. This means, read mapping 
is finished as soon as the sequencer is finished.


2. Website
----------

The HiLive project website is https://sourceforge.net/projects/hilive/

There you can find the latest version of HiLive, source code, documentation,
and examples.


3. Installation
---------------

If the binary distribution from the project website does not work for you,
you can still compile HiLive from source.

Make sure that the following dependences are installed:
 - cmake (>= 2.8)
 - boost (system, filesystem, program_options)
 - zlib
 - lz4

Check out the source code from the project website. Compile HiLive with:
  cd [hilive-code]
  mkdir build && cd build
  cmake ..
  make

To compile HiLive with a different k-mer size than k=15 make the following
adjustment (here: k=10):
  cmake -DHiLive_K 10 ..
  make


4. Usage
--------

HiLive has two components:
 - hilive-build: build the k-mer index of the reference genome
 - hilive: the read mapper itself

Using hilive-build:

Building a k-mer index from FASTA file input.fa:
  hilive-build input.fa
The index is written to input.fa.kix

Building an index from a large reference genome. Here is makes sense to use trimming,
i.e. removing k-mers from the index that occurr more than 1000 times (for example) in
the index. The index is written into the file trimmed.kix
  hilive-build -t 1000 -o trimmed.kix input.fa

Using hilive:

To map reads in a 100bp run using default settings:
  hilive /path/to/BaseCalls /path/to/index.kix 100

We recommend to adjust the numbers of threads used by HiLive with -n. If possible,
make use of all threads on the machine!

Please consult the project website for more details on the parameters!


5. License
----------

See the file LICENSE for licensing information.


6. Contact
----------

Please consult the HiLive project website for questions!

If this does not help, please feel free to consult:

Martin S. Lindner <martin (at) mail-lindner.de> (technical contact)
Bernhard Y. Renard <renardb (at) rki.de> (project head)
